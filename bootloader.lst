
;
; Created on Tue Apr 02 13:48:58 2019 with ECE 449 assembler v1.10 Beta 4 (16 bit).
;
;Header Section
RADIX 10
DEPTH 2048
WIDTH 16
DEFAULT 0
;
; Data Section
; Specifies data to be stored in different addresses
; e.g., DATA 0:A, 1:0
;
RADIX 16
DATA 
0000 => "1000000000000100", -- 0000 - 8004                     brr           ResetExecute
0002 => "1000000000101011", -- 0002 - 802B                     brr           ResetLoad
0004 => "1000000000000001", -- 0004 - 8001                     brr           Interrupt
0006 => "1000000000000000", -- 0006 - 8000 WaitForever:        brr           WaitForever
0008 => "0010010100000100", -- 0008 - 2504 ResetExecute:       loadimm.upper BootVector.hi
0010 => "0010010000000000", -- 000A - 2400                     loadimm.lower BootVector.lo
0012 => "0010000111111000", -- 000C - 21F8                     load          r7,r7
0014 => "0000000000000000", -- 000E - 0000                     nop          
0016 => "0000000000000000", -- 0010 - 0000                     nop          
0018 => "0010010000000000", -- 0012 - 2400                     loadimm.lower 0x00
0020 => "0010011010111000", -- 0014 - 26B8                     mov           r2,r7
0022 => "0010010100100101", -- 0016 - 2525                     loadimm.upper 0x25
0024 => "0010010000000000", -- 0018 - 2400                     loadimm.lower 0x00
0026 => "0000010010010111", -- 001A - 0497                     sub           r2,r2,r7
0028 => "0000111010000000", -- 001C - 0E80                     test          r2
0030 => "1000010000000010", -- 001E - 8402                     brr.z         ResetExecute_1
0032 => "1000000111110011", -- 0020 - 81F3                     brr           WaitForever
0034 => "0010010100000100", -- 0022 - 2504                     loadimm.upper BootVector_1.hi
0036 => "0010010000000010", -- 0024 - 2402                     loadimm.lower BootVector_1.lo
0038 => "0010000111111000", -- 0026 - 21F8                     load          r7,r7
0040 => "0000000000000000", -- 0028 - 0000                     nop          
0042 => "0000000000000000", -- 002A - 0000                     nop          
0044 => "0010010000000000", -- 002C - 2400                     loadimm.lower 0x00
0046 => "0010011010111000", -- 002E - 26B8                     mov           r2,r7
0048 => "0010010100100100", -- 0030 - 2524                     loadimm.upper 0x24
0050 => "0010010000000000", -- 0032 - 2400                     loadimm.lower 0x00
0052 => "0000010010010111", -- 0034 - 0497                     sub           r2,r2,r7
0054 => "0000111010000000", -- 0036 - 0E80                     test          r2
0056 => "1000010000000010", -- 0038 - 8402                     brr.z         ResetExecute_2
0058 => "1000000111100110", -- 003A - 81E6                     brr           WaitForever
0060 => "0010010100000100", -- 003C - 2504                     loadimm.upper BootVector_2.hi
0062 => "0010010000000100", -- 003E - 2404                     loadimm.lower BootVector_2.lo
0064 => "0010000010111000", -- 0040 - 20B8                     load          r2,r7
0066 => "0000000000000000", -- 0042 - 0000                     nop          
0068 => "0000000000000000", -- 0044 - 0000                     nop          
0070 => "0010010110000111", -- 0046 - 2587                     loadimm.upper 0x87
0072 => "0010010011000000", -- 0048 - 24C0                     loadimm.lower 0xc0
0074 => "0000010010010111", -- 004A - 0497                     sub           r2,r2,r7
0076 => "0000111010000000", -- 004C - 0E80                     test          r2
0078 => "1000010000000010", -- 004E - 8402                     brr.z         ResetExecute_3
0080 => "1000000111011011", -- 0050 - 81DB                     brr           WaitForever
0082 => "0010010100000100", -- 0052 - 2504                     loadimm.upper BootVector.hi
0084 => "0010010000000000", -- 0054 - 2400                     loadimm.lower BootVector.lo
0086 => "1000011111000000", -- 0056 - 87C0                     br            r7,0
0088 => "0010010100000000", -- 0058 - 2500 ResetLoad:          loadimm.upper 0x00
0090 => "0010010010000000", -- 005A - 2480                     loadimm.lower 0x80
0092 => "0010011110111000", -- 005C - 27B8                     mov           r6,r7
0094 => "0100001010000000", -- 005E - 4280 WaitFor_AA:         in            r2
0096 => "0000100010010110", -- 0060 - 0896                     nand          r2,r2,r6
0098 => "0000100010010010", -- 0062 - 0892                     nand          r2,r2,r2
0100 => "0000111010000000", -- 0064 - 0E80                     test          r2
0102 => "1000010111111100", -- 0066 - 85FC                     brr.z         WaitFor_AA
0104 => "0010010111111111", -- 0068 - 25FF                     loadimm.upper 0xFF
0106 => "0010010000000000", -- 006A - 2400                     loadimm.lower 0x00
0108 => "0100001010000000", -- 006C - 4280                     in            r2
0110 => "0000100010010111", -- 006E - 0897                     nand          r2,r2,r7
0112 => "0000100010010010", -- 0070 - 0892                     nand          r2,r2,r2
0114 => "0010010110101010", -- 0072 - 25AA                     LOADIMM.UPPER 0xAA
0116 => "0000010010010111", -- 0074 - 0497                     sub           r2,r2,r7
0118 => "0000111010000000", -- 0076 - 0E80                     test          r2
0120 => "1000010000000010", -- 0078 - 8402                     brr.z         Got_AA
0122 => "1000000111110010", -- 007A - 81F2                     brr           WaitFor_AA
0124 => "0010010000000001", -- 007C - 2401 Got_AA:             loadimm.lower 0x01
0126 => "0000000000000000", -- 007E - 0000                     nop          
0128 => "0000000000000000", -- 0080 - 0000                     nop          
0130 => "0000000000000000", -- 0082 - 0000                     nop          
0132 => "0100000111000000", -- 0084 - 41C0                     out           r7
0134 => "0100001010000000", -- 0086 - 4280                     in            r2
0136 => "0000100010010110", -- 0088 - 0896                     nand          r2,r2,r6
0138 => "0000100010010010", -- 008A - 0892                     nand          r2,r2,r2
0140 => "0000111010000000", -- 008C - 0E80                     test          r2
0142 => "1000010000000010", -- 008E - 8402                     brr.z         Done_AA
0144 => "1000000111111011", -- 0090 - 81FB                     brr           WaitForEnd_AA
0146 => "0010010000000000", -- 0092 - 2400 Done_AA:            loadimm.lower 0x00
0148 => "0000000000000000", -- 0094 - 0000                     nop          
0150 => "0000000000000000", -- 0096 - 0000                     nop          
0152 => "0000000000000000", -- 0098 - 0000                     nop          
0154 => "0100000111000000", -- 009A - 41C0                     out           r7
0156 => "0010010100000100", -- 009C - 2504                     loadimm.upper RamStart.hi
0158 => "0010010000000000", -- 009E - 2400                     loadimm.lower RamStart.lo
0160 => "0010011110111000", -- 00A0 - 27B8                     mov           r6,r7
0162 => "0010010100000000", -- 00A2 - 2500                     loadimm.upper 0x00
0164 => "0010010000000010", -- 00A4 - 2402                     loadimm.lower 0x02
0166 => "0010001110111000", -- 00A6 - 23B8                     store         r6,r7
0168 => "0010010100000000", -- 00A8 - 2500                     loadimm.upper 0x00
0170 => "0010010010000000", -- 00AA - 2480                     loadimm.lower 0x80
0172 => "0010011110111000", -- 00AC - 27B8                     mov           r6,r7
0174 => "0100001010000000", -- 00AE - 4280 WaitFor_55:         in            r2
0176 => "0000100010010110", -- 00B0 - 0896                     nand          r2,r2,r6
0178 => "0000100010010010", -- 00B2 - 0892                     nand          r2,r2,r2
0180 => "0000111010000000", -- 00B4 - 0E80                     test          r2
0182 => "1000010111111100", -- 00B6 - 85FC                     brr.z         WaitFor_55
0184 => "0010010111111111", -- 00B8 - 25FF                     loadimm.upper 0xFF
0186 => "0010010000000000", -- 00BA - 2400                     loadimm.lower 0x00
0188 => "0100001010000000", -- 00BC - 4280                     in            r2
0190 => "0000100010010111", -- 00BE - 0897                     nand          r2,r2,r7
0192 => "0000100010010010", -- 00C0 - 0892                     nand          r2,r2,r2
0194 => "0010010101010101", -- 00C2 - 2555                     LOADIMM.UPPER 0x55
0196 => "0000010010010111", -- 00C4 - 0497                     sub           r2,r2,r7
0198 => "0000111010000000", -- 00C6 - 0E80                     test          r2
0200 => "1000010000000010", -- 00C8 - 8402                     brr.z         Got_55
0202 => "1000000111110010", -- 00CA - 81F2                     brr           WaitFor_55
0204 => "0010010000000001", -- 00CC - 2401 Got_55:             loadimm.lower 0x01
0206 => "0000000000000000", -- 00CE - 0000                     nop          
0208 => "0000000000000000", -- 00D0 - 0000                     nop          
0210 => "0000000000000000", -- 00D2 - 0000                     nop          
0212 => "0100000111000000", -- 00D4 - 41C0                     out           r7
0214 => "0100001010000000", -- 00D6 - 4280                     in            r2
0216 => "0000100010010110", -- 00D8 - 0896                     nand          r2,r2,r6
0218 => "0000100010010010", -- 00DA - 0892                     nand          r2,r2,r2
0220 => "0000111010000000", -- 00DC - 0E80                     test          r2
0222 => "1000010000000010", -- 00DE - 8402                     brr.z         Done_55
0224 => "1000000111111011", -- 00E0 - 81FB                     brr           WaitForEnd_55
0226 => "0010010000000000", -- 00E2 - 2400 Done_55:            loadimm.lower 0x00
0228 => "0000000000000000", -- 00E4 - 0000                     nop          
0230 => "0000000000000000", -- 00E6 - 0000                     nop          
0232 => "0000000000000000", -- 00E8 - 0000                     nop          
0234 => "0100000111000000", -- 00EA - 41C0                     out           r7
0236 => "0010010100000000", -- 00EC - 2500                     loadimm.upper 0x00
0238 => "0010010010000000", -- 00EE - 2480                     loadimm.lower 0x80
0240 => "0010011110111000", -- 00F0 - 27B8                     mov           r6,r7
0242 => "0100001010000000", -- 00F2 - 4280 WaitForSize:        in            r2
0244 => "0010011100010000", -- 00F4 - 2710                     mov           r4,r2
0246 => "0000100010010110", -- 00F6 - 0896                     nand          r2,r2,r6
0248 => "0000100010010010", -- 00F8 - 0892                     nand          r2,r2,r2
0250 => "0000111010000000", -- 00FA - 0E80                     test          r2
0252 => "1000010111111011", -- 00FC - 85FB                     brr.z         WaitForSize
0254 => "0000110100001000", -- 00FE - 0D08                     shr           r4,8
0256 => "0010010000000001", -- 0100 - 2401                     loadimm.lower 0x01
0258 => "0000000000000000", -- 0102 - 0000                     nop          
0260 => "0000000000000000", -- 0104 - 0000                     nop          
0262 => "0000000000000000", -- 0106 - 0000                     nop          
0264 => "0100000111000000", -- 0108 - 41C0                     out           r7
0266 => "0100001010000000", -- 010A - 4280                     in            r2
0268 => "0000100010010110", -- 010C - 0896                     nand          r2,r2,r6
0270 => "0000100010010010", -- 010E - 0892                     nand          r2,r2,r2
0272 => "0000111010000000", -- 0110 - 0E80                     test          r2
0274 => "1000010000000010", -- 0112 - 8402                     brr.z         DoneSize
0276 => "1000000111111011", -- 0114 - 81FB                     brr           WaitForSizeEnd
0278 => "0010010000000000", -- 0116 - 2400 DoneSize:           loadimm.lower 0x00
0280 => "0000000000000000", -- 0118 - 0000                     nop          
0282 => "0000000000000000", -- 011A - 0000                     nop          
0284 => "0000000000000000", -- 011C - 0000                     nop          
0286 => "0100000111000000", -- 011E - 41C0                     out           r7
0288 => "0010010100000010", -- 0120 - 2502                     loadimm.upper 0x02
0290 => "0010010000000000", -- 0122 - 2400                     loadimm.lower 0x00
0292 => "0010011011111000", -- 0124 - 26F8                     mov           r3,r7
0294 => "0010010111111111", -- 0126 - 25FF GetProgram:         loadimm.upper LedDisplay.hi
0296 => "0010010011110010", -- 0128 - 24F2                     loadimm.lower LedDisplay.lo
0298 => "0000000000000000", -- 012A - 0000                     nop          
0300 => "0000000000000000", -- 012C - 0000                     nop          
0302 => "0000000000000000", -- 012E - 0000                     nop          
0304 => "0000000000000000", -- 0130 - 0000                     nop          
0306 => "0000000000000000", -- 0132 - 0000                     nop          
0308 => "0010001111100000", -- 0134 - 23E0                     store         r7,r4
0310 => "0000111100000000", -- 0136 - 0F00                     test          r4
0312 => "1000010101100111", -- 0138 - 8567                     brr.z         WaitForever
0314 => "0100001010000000", -- 013A - 4280                     in            r2
0316 => "0010011001010000", -- 013C - 2650                     mov           r1,r2
0318 => "0000100010010110", -- 013E - 0896                     nand          r2,r2,r6
0320 => "0000100010010010", -- 0140 - 0892                     nand          r2,r2,r2
0322 => "0000111010000000", -- 0142 - 0E80                     test          r2
0324 => "1000010111111011", -- 0144 - 85FB                     brr.z         WaitForHighByte
0326 => "0000110001001000", -- 0146 - 0C48                     shr           r1,8
0328 => "0000101001001000", -- 0148 - 0A48                     shl           r1,8
0330 => "0010010000000001", -- 014A - 2401                     loadimm.lower 0x01
0332 => "0000000000000000", -- 014C - 0000                     nop          
0334 => "0000000000000000", -- 014E - 0000                     nop          
0336 => "0000000000000000", -- 0150 - 0000                     nop          
0338 => "0100000111000000", -- 0152 - 41C0                     out           r7
0340 => "0100001010000000", -- 0154 - 4280                     in            r2
0342 => "0000100010010110", -- 0156 - 0896                     nand          r2,r2,r6
0344 => "0000100010010010", -- 0158 - 0892                     nand          r2,r2,r2
0346 => "0000111010000000", -- 015A - 0E80                     test          r2
0348 => "1000010000000010", -- 015C - 8402                     brr.z         DoneHighByte
0350 => "1000000111111011", -- 015E - 81FB                     brr           WaitForHighByteEnd
0352 => "0010010000000000", -- 0160 - 2400                     loadimm.lower 0x00
0354 => "0000000000000000", -- 0162 - 0000                     nop          
0356 => "0000000000000000", -- 0164 - 0000                     nop          
0358 => "0000000000000000", -- 0166 - 0000                     nop          
0360 => "0100000111000000", -- 0168 - 41C0                     out           r7
0362 => "0010011000001000", -- 016A - 2608                     mov           r0,r1
0364 => "0100001010000000", -- 016C - 4280                     in            r2
0366 => "0010011001010000", -- 016E - 2650                     mov           r1,r2
0368 => "0000100010010110", -- 0170 - 0896                     nand          r2,r2,r6
0370 => "0000100010010010", -- 0172 - 0892                     nand          r2,r2,r2
0372 => "0000111010000000", -- 0174 - 0E80                     test          r2
0374 => "1000010111111011", -- 0176 - 85FB                     brr.z         WaitForLowByte
0376 => "0000110001001000", -- 0178 - 0C48                     shr           r1,8
0378 => "0010010000000001", -- 017A - 2401                     loadimm.lower 0x01
0380 => "0000000000000000", -- 017C - 0000                     nop          
0382 => "0000000000000000", -- 017E - 0000                     nop          
0384 => "0000000000000000", -- 0180 - 0000                     nop          
0386 => "0100000111000000", -- 0182 - 41C0                     out           r7
0388 => "0100001010000000", -- 0184 - 4280                     in            r2
0390 => "0000100010010110", -- 0186 - 0896                     nand          r2,r2,r6
0392 => "0000100010010010", -- 0188 - 0892                     nand          r2,r2,r2
0394 => "0000111010000000", -- 018A - 0E80                     test          r2
0396 => "1000010000000010", -- 018C - 8402                     brr.z         DoneLowByte
0398 => "1000000111111011", -- 018E - 81FB                     brr           WaitForLowByteEnd
0400 => "0100001010000000", -- 0190 - 4280 DoneLowByte:        in            r2
0402 => "0010010000000000", -- 0192 - 2400                     loadimm.lower 0x00
0404 => "0000000000000000", -- 0194 - 0000                     nop          
0406 => "0000000000000000", -- 0196 - 0000                     nop          
0408 => "0000000000000000", -- 0198 - 0000                     nop          
0410 => "0100000111000000", -- 019A - 41C0                     out           r7
0412 => "0000001001001000", -- 019C - 0248                     add           r1,r1,r0
0414 => "0000101010001001", -- 019E - 0A89                     shl           r2,9
0416 => "0000110010001111", -- 01A0 - 0C8F                     shr           r2,15
0418 => "0000111010000000", -- 01A2 - 0E80                     test          r2
0420 => "1000010000010101", -- 01A4 - 8415                     brr.z         GotInstruction
0422 => "0010011011001000", -- 01A6 - 26C8                     mov           r3,r1
0424 => "0010010100000000", -- 01A8 - 2500                     loadimm.upper StepSize.hi
0426 => "0010010000000010", -- 01AA - 2402                     loadimm.lower StepSize.lo
0428 => "0010011010111000", -- 01AC - 26B8                     mov           r2,r7
0430 => "0010010100000100", -- 01AE - 2504                     loadimm.upper BootVector.hi
0432 => "0010010000000000", -- 01B0 - 2400                     loadimm.lower BootVector.lo
0434 => "0010011000111000", -- 01B2 - 2638                     mov           r0,r7
0436 => "0010011111011000", -- 01B4 - 27D8                     mov           r7,r3
0438 => "0000110111001000", -- 01B6 - 0DC8                     shr           r7,8
0440 => "0010010100100101", -- 01B8 - 2525                     loadimm.upper 0x25
0442 => "0010001000111000", -- 01BA - 2238                     store         r0,r7
0444 => "0000001000000010", -- 01BC - 0202                     add           r0,r0,r2
0446 => "0010011111011000", -- 01BE - 27D8                     mov           r7,r3
0448 => "0010010100100100", -- 01C0 - 2524                     loadimm.upper 0x24
0450 => "0010001000111000", -- 01C2 - 2238                     store         r0,r7
0452 => "0000001000000010", -- 01C4 - 0202                     add           r0,r0,r2
0454 => "0010010110000111", -- 01C6 - 2587                     loadimm.upper 0x87
0456 => "0010010011000000", -- 01C8 - 24C0                     loadimm.lower 0xC0
0458 => "0010001000111000", -- 01CA - 2238                     store         r0,r7
0460 => "1000000000000101", -- 01CC - 8005                     brr           DecrementCount
0462 => "0010001011001000", -- 01CE - 22C8 GotInstruction:     store         r3,r1
0464 => "0010010100000000", -- 01D0 - 2500                     loadimm.upper StepSize.hi
0466 => "0010010000000010", -- 01D2 - 2402                     loadimm.lower StepSize.lo
0468 => "0000001011011111", -- 01D4 - 02DF                     add           r3,r3,r7
0470 => "0010010100000000", -- 01D6 - 2500                     loadimm.upper 0x00
0472 => "0010010000000001", -- 01D8 - 2401                     loadimm.lower 0x01
0474 => "0000010100100111", -- 01DA - 0527                     sub           r4,r4,r7
0476 => "1000000110100101", -- 01DC - 81A5                     brr           GetProgram


-------------------------------------------------------
Symbol Table:
BootVector            1024 (0400)
BootVector_1          1026 (0402)
BootVector_2          1028 (0404)
DecrementCount         470 (01D6)
DoneHighByte           352 (0160)
DoneLowByte            400 (0190)
DoneSize               278 (0116)
Done_55                226 (00E2)
Done_AA                146 (0092)
GetProgram             294 (0126)
GotInstruction         462 (01CE)
Got_55                 204 (00CC)
Got_AA                 124 (007C)
Interrupt                6 (0006)
LedDisplay           65522 (FFF2)
RamStart              1024 (0400)
ResetExecute             8 (0008)
ResetExecute_1          34 (0022)
ResetExecute_2          60 (003C)
ResetExecute_3          82 (0052)
ResetLoad               88 (0058)
StepSize                 2 (0002)
WaitForEnd_55          214 (00D6)
WaitForEnd_AA          134 (0086)
WaitForHighByte        314 (013A)
WaitForHighByteEnd     340 (0154)
WaitForLowByte         364 (016C)
WaitForLowByteEnd      388 (0184)
WaitForSize            242 (00F2)
WaitForSizeEnd         266 (010A)
WaitFor_55             174 (00AE)
WaitFor_AA              94 (005E)
WaitForever              6 (0006)

